{"version":3,"file":"pow.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","quantizeToF16","quantizeToF32","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","quantizeFunctionForScalarType","type","f32","f16","v","test","batch","desc","params","u","combine","filter","stage","beginSubcases","expand","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expectedResult","a","Number","b","scalarType","quantizeFn","p","Math","pow","isFinite","create","kInvalidArgumentTypes","bool","vec","kArgCases","good","bad_no_parens","bad_0args","bad_1args","bad_3args","bad_0bool","bad_0array","bad_0struct","bad_0uint","bad_0int","bad_0vec2i","bad_0vec2u","bad_0vec3i","bad_0vec3u","bad_0vec4i","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1uint","bad_1int","bad_1vec2i","bad_1vec2u","bad_1vec3i","bad_1vec3u","bad_1vec4i","bad_1vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/pow.spec.ts"],"sourcesContent":["const builtin = 'pow';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n  ScalarType,\n} from '../../../../../util/conversion.js';\nimport { QuantizeFunc, quantizeToF16, quantizeToF32 } from '../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\nfunction quantizeFunctionForScalarType(type: ScalarType): QuantizeFunc<number> {\n  switch (type) {\n    case Type.f32:\n      return quantizeToF32;\n    case Type.f16:\n      return quantizeToF16;\n    default:\n      return (v: number) => v;\n  }\n}\n\ng.test('values')\n  .batch(125)\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n\nTODO(http://github.com/gpuweb/issues/4527): This validation matches what is currently in Tint but\nit needs to be clarified in the spec if this is the desired behavior.\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypes[u.type]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('b', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n  )\n  .beforeAllSubcases(t => {\n    if (scalarTypeOf(kValidArgumentTypes[t.params.type]) === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    let expectedResult = true;\n\n    const a = Number(t.params.a);\n    const b = Number(t.params.b);\n    if (a < 0 || (a === 0 && b <= 0)) {\n      expectedResult = false;\n    }\n\n    if (expectedResult) {\n      const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n      const quantizeFn = quantizeFunctionForScalarType(scalarType);\n\n      // Should be invalid if the pow calculation results in values that exceed\n      // the maximum representable float value for the given type\n      const p = quantizeFn(Math.pow(a, b));\n      if (!Number.isFinite(p)) {\n        expectedResult = false;\n      }\n    }\n\n    const type = kValidArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.a), type.create(t.params.b)],\n      t.params.stage\n    );\n  });\n\nconst kInvalidArgumentTypes = objectsToRecord([\n  Type.bool,\n  Type.vec(2, Type.bool),\n  Type.vec(3, Type.bool),\n  Type.vec(4, Type.bool),\n  ...kConcreteIntegerScalarsAndVectors,\n]);\n\ng.test('invalid_argument')\n  .desc(\n    `\nValidates that all integer or boolean scalar and vector arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kInvalidArgumentTypes)))\n  .beforeAllSubcases(t => {\n    if (kInvalidArgumentTypes[t.params.type] === Type.f16) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const expectedResult = false; // should always error with invalid argument types\n    const type = kInvalidArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(1), type.create(2)],\n      'constant'\n    );\n  });\n\nconst kArgCases = {\n  good: '(2.0, 2.0)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1args: '(2.0)',\n  bad_3args: '(2.0,2.0,2.0)',\n  // Bad value for arg 0\n  bad_0bool: '(false, 2.0)',\n  bad_0array: '(array(1.1,2.2), 2.0)',\n  bad_0struct: '(modf(2.2), 2.0)',\n  bad_0uint: '(1u, 2.0)',\n  bad_0int: '(1i, 2.0)',\n  bad_0vec2i: '(vec2i(), 2.0)',\n  bad_0vec2u: '(vec2u(), 2.0)',\n  bad_0vec3i: '(vec3i(), 2.0)',\n  bad_0vec3u: '(vec3u(), 2.0)',\n  bad_0vec4i: '(vec4i(), 2.0)',\n  bad_0vec4u: '(vec4u(), 2.0)',\n  // Bad value for arg 1\n  bad_1bool: '(2.0, false)',\n  bad_1array: '(2.0, array(1.1,2.2))',\n  bad_1struct: '(2.0, modf(2.2))',\n  bad_1uint: '(2.0, 1u)',\n  bad_1int: '(2.0, 1i)',\n  bad_1vec2i: '(2.0, vec2i())',\n  bad_1vec2u: '(2.0, vec2u())',\n  bad_1vec3i: '(2.0, vec3i())',\n  bad_1vec3u: '(2.0, vec3u())',\n  bad_1vec4i: '(2.0, vec4i())',\n  bad_1vec4u: '(2.0, vec4u())',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}