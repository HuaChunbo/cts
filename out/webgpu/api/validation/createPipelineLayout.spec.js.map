{"version":3,"file":"createPipelineLayout.spec.js","names":["description","makeTestGroup","bufferBindingTypeInfo","kBufferBindingTypes","GPUConst","ValidationTest","clone","descriptor","JSON","parse","stringify","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","type","visibility","params","info","maxDynamicLimit","perPipelineLimitClass","perStageLimit","getDefaultLimit","perStageLimitClass","maxLimit","maxDynamic","Math","min","maxDynamicBufferBindings","binding","push","buffer","hasDynamicOffset","maxDynamicBufferBindGroupLayout","device","createBindGroupLayout","entries","goodDescriptor","goodPipelineLayoutDescriptor","bindGroupLayouts","createPipelineLayout","badDescriptor","badPipelineLayoutDescriptor","expectValidationError","bindGroupLayoutDescriptor","maxBindGroupLayouts","map","layout0Mismatched","layout1Mismatched","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","bglDescriptor","layout0","mismatchedDevice","layout1","MaybeNullBindGroupLayoutTypes","expand","p","bindGroupLayoutCount","filter","allBGLs","bindGroupLayout0","bindGroupLayout1","bindGroupLayout2","bindGroupLayout3","bgls","slice","includes","emptyBindGroupLayout","nonEmptyBindGroupLayout","ShaderStage","COMPUTE","texture","AddBindGroupLayout","bindGroupLayoutType","kShouldError","pipelineType","emptyBindGroupLayoutType","emptyBindGroupLayoutIndex","emptyBindGroupLayoutIndexMissedInShader","i","FRAGMENT","layout","declarations","statement","shouldError","code","shaderModule","createShaderModule","createRenderPipeline","vertex","module","fragment","targets","format","createComputePipeline","compute"],"sources":["../../../../src/webgpu/api/validation/createPipelineLayout.spec.ts"],"sourcesContent":["export const description = `\ncreatePipelineLayout validation tests.\n\nTODO: review existing tests, write descriptions, and make sure tests are complete.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { bufferBindingTypeInfo, kBufferBindingTypes } from '../../capability_info.js';\nimport { GPUConst } from '../../constants.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nfunction clone<T extends GPUBindGroupLayoutDescriptor>(descriptor: T): T {\n  return JSON.parse(JSON.stringify(descriptor));\n}\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('number_of_dynamic_buffers_exceeds_the_maximum_value')\n  .desc(\n    `\n    Test that creating a pipeline layout fails with a validation error if the number of dynamic\n    buffers exceeds the maximum value in the pipeline layout.\n    - Test that creation of a pipeline using the maximum number of dynamic buffers added a dynamic\n      buffer fails.\n\n    TODO(#230): Update to enforce per-stage and per-pipeline-layout limits on BGLs as well.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('visibility', [0, 2, 4, 6])\n      .combine('type', kBufferBindingTypes)\n  )\n  .fn(t => {\n    const { type, visibility } = t.params;\n    const info = bufferBindingTypeInfo({ type });\n    const { maxDynamicLimit } = info.perPipelineLimitClass;\n    const perStageLimit = t.getDefaultLimit(info.perStageLimitClass.maxLimit);\n    const maxDynamic = Math.min(\n      maxDynamicLimit ? t.getDefaultLimit(maxDynamicLimit) : 0,\n      perStageLimit\n    );\n\n    const maxDynamicBufferBindings: GPUBindGroupLayoutEntry[] = [];\n    for (let binding = 0; binding < maxDynamic; binding++) {\n      maxDynamicBufferBindings.push({\n        binding,\n        visibility,\n        buffer: { type, hasDynamicOffset: true },\n      });\n    }\n\n    const maxDynamicBufferBindGroupLayout = t.device.createBindGroupLayout({\n      entries: maxDynamicBufferBindings,\n    });\n\n    const goodDescriptor = {\n      entries: [{ binding: 0, visibility, buffer: { type, hasDynamicOffset: false } }],\n    };\n\n    if (perStageLimit > maxDynamic) {\n      const goodPipelineLayoutDescriptor = {\n        bindGroupLayouts: [\n          maxDynamicBufferBindGroupLayout,\n          t.device.createBindGroupLayout(goodDescriptor),\n        ],\n      };\n\n      // Control case\n      t.device.createPipelineLayout(goodPipelineLayoutDescriptor);\n    }\n\n    // Check dynamic buffers exceed maximum in pipeline layout.\n    const badDescriptor = clone(goodDescriptor);\n    badDescriptor.entries[0].buffer.hasDynamicOffset = true;\n\n    const badPipelineLayoutDescriptor = {\n      bindGroupLayouts: [\n        maxDynamicBufferBindGroupLayout,\n        t.device.createBindGroupLayout(badDescriptor),\n      ],\n    };\n\n    t.expectValidationError(() => {\n      t.device.createPipelineLayout(badPipelineLayoutDescriptor);\n    });\n  });\n\ng.test('number_of_bind_group_layouts_exceeds_the_maximum_value')\n  .desc(\n    `\n    Test that creating a pipeline layout fails with a validation error if the number of bind group\n    layouts exceeds the maximum value in the pipeline layout.\n    - Test that creation of a pipeline using the maximum number of bind groups added a bind group\n      fails.\n  `\n  )\n  .fn(t => {\n    const bindGroupLayoutDescriptor: GPUBindGroupLayoutDescriptor = {\n      entries: [],\n    };\n\n    // 4 is the maximum number of bind group layouts.\n    const maxBindGroupLayouts = [1, 2, 3, 4].map(() =>\n      t.device.createBindGroupLayout(bindGroupLayoutDescriptor)\n    );\n\n    const goodPipelineLayoutDescriptor = {\n      bindGroupLayouts: maxBindGroupLayouts,\n    };\n\n    // Control case\n    t.device.createPipelineLayout(goodPipelineLayoutDescriptor);\n\n    // Check bind group layouts exceed maximum in pipeline layout.\n    const badPipelineLayoutDescriptor = {\n      bindGroupLayouts: [\n        ...maxBindGroupLayouts,\n        t.device.createBindGroupLayout(bindGroupLayoutDescriptor),\n      ],\n    };\n\n    t.expectValidationError(() => {\n      t.device.createPipelineLayout(badPipelineLayoutDescriptor);\n    });\n  });\n\ng.test('bind_group_layouts,device_mismatch')\n  .desc(\n    `\n    Tests createPipelineLayout cannot be called with bind group layouts created from another device\n    Test with two layouts to make sure all layouts can be validated:\n    - layout0 and layout1 from same device\n    - layout0 and layout1 from different device\n    `\n  )\n  .paramsSubcasesOnly([\n    { layout0Mismatched: false, layout1Mismatched: false }, // control case\n    { layout0Mismatched: true, layout1Mismatched: false },\n    { layout0Mismatched: false, layout1Mismatched: true },\n  ])\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(t => {\n    const { layout0Mismatched, layout1Mismatched } = t.params;\n\n    const mismatched = layout0Mismatched || layout1Mismatched;\n\n    const bglDescriptor: GPUBindGroupLayoutDescriptor = {\n      entries: [],\n    };\n\n    const layout0 = layout0Mismatched\n      ? t.mismatchedDevice.createBindGroupLayout(bglDescriptor)\n      : t.device.createBindGroupLayout(bglDescriptor);\n    const layout1 = layout1Mismatched\n      ? t.mismatchedDevice.createBindGroupLayout(bglDescriptor)\n      : t.device.createBindGroupLayout(bglDescriptor);\n\n    t.expectValidationError(() => {\n      t.device.createPipelineLayout({ bindGroupLayouts: [layout0, layout1] });\n    }, mismatched);\n  });\n\nconst MaybeNullBindGroupLayoutTypes = ['Null', 'Undefined', 'Empty', 'NonEmpty'] as const;\n\ng.test('bind_group_layouts,null_bind_group_layouts')\n  .desc(\n    `\n    Tests that it is valid to create a pipeline layout with null bind group layouts.\n    `\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('bindGroupLayoutCount', [1, 2, 3, 4] as const)\n      .combine('bindGroupLayout0', MaybeNullBindGroupLayoutTypes)\n      .expand('bindGroupLayout1', p =>\n        p.bindGroupLayoutCount > 1 ? MaybeNullBindGroupLayoutTypes : (['Null'] as const)\n      )\n      .expand('bindGroupLayout2', p =>\n        p.bindGroupLayoutCount > 2 ? MaybeNullBindGroupLayoutTypes : (['Null'] as const)\n      )\n      .expand('bindGroupLayout3', p =>\n        p.bindGroupLayoutCount > 3 ? MaybeNullBindGroupLayoutTypes : (['Null'] as const)\n      )\n      .filter(p => {\n        // Only test cases where at least one of the bind group layouts is null.\n        const allBGLs = [\n          p.bindGroupLayout0,\n          p.bindGroupLayout1,\n          p.bindGroupLayout2,\n          p.bindGroupLayout3,\n        ];\n        const bgls = allBGLs.slice(0, p.bindGroupLayoutCount);\n        return bgls.includes('Null') || bgls.includes('Undefined');\n      })\n  )\n  .fn(t => {\n    const {\n      bindGroupLayoutCount,\n      bindGroupLayout0,\n      bindGroupLayout1,\n      bindGroupLayout2,\n      bindGroupLayout3,\n    } = t.params;\n\n    const emptyBindGroupLayout = t.device.createBindGroupLayout({\n      entries: [],\n    });\n    const nonEmptyBindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUConst.ShaderStage.COMPUTE,\n          texture: {},\n        },\n      ],\n    });\n\n    const bindGroupLayouts: (GPUBindGroupLayout | null | undefined)[] = [];\n\n    const AddBindGroupLayout = function (\n      bindGroupLayoutType: (typeof MaybeNullBindGroupLayoutTypes)[number]\n    ) {\n      switch (bindGroupLayoutType) {\n        case 'Null':\n          bindGroupLayouts.push(null);\n          break;\n        case 'Undefined':\n          bindGroupLayouts.push(undefined);\n          break;\n        case 'Empty':\n          bindGroupLayouts.push(emptyBindGroupLayout);\n          break;\n        case 'NonEmpty':\n          bindGroupLayouts.push(nonEmptyBindGroupLayout);\n          break;\n      }\n    };\n\n    AddBindGroupLayout(bindGroupLayout0);\n    if (bindGroupLayoutCount > 1) {\n      AddBindGroupLayout(bindGroupLayout1);\n    }\n    if (bindGroupLayoutCount > 2) {\n      AddBindGroupLayout(bindGroupLayout2);\n    }\n    if (bindGroupLayoutCount > 3) {\n      AddBindGroupLayout(bindGroupLayout3);\n    }\n\n    const kShouldError = false;\n    t.expectValidationError(() => {\n      t.device.createPipelineLayout({ bindGroupLayouts });\n    }, kShouldError);\n  });\n\ng.test('bind_group_layouts,create_pipeline_with_null_bind_group_layouts')\n  .desc(\n    `\n  Tests that it is valid to create a render pipeline or compute pipeline with a pipeline layout\n  created with null bind group layouts as long as the pipeline layout matches the declarations in\n  the shaders.\n  `\n  )\n  .params(u =>\n    u\n      .combine('pipelineType', ['Render', 'Compute'] as const)\n      .combine('emptyBindGroupLayoutType', ['Null', 'Undefined'] as const)\n      .combine('emptyBindGroupLayoutIndex', [0, 1, 2, 3] as const)\n      .combine('emptyBindGroupLayoutIndexMissedInShader', [true, false])\n  )\n  .fn(t => {\n    const {\n      pipelineType,\n      emptyBindGroupLayoutType,\n      emptyBindGroupLayoutIndex,\n      emptyBindGroupLayoutIndexMissedInShader,\n    } = t.params;\n\n    const bindGroupLayouts: (GPUBindGroupLayout | null | undefined)[] = [];\n    for (let i = 0; i < 4; ++i) {\n      if (i === emptyBindGroupLayoutIndex) {\n        switch (emptyBindGroupLayoutType) {\n          case 'Null':\n            bindGroupLayouts.push(null);\n            break;\n          case 'Undefined':\n            bindGroupLayouts.push(undefined);\n            break;\n        }\n      } else {\n        const nonEmptyBindGroupLayout = t.device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUConst.ShaderStage.COMPUTE | GPUConst.ShaderStage.FRAGMENT,\n              buffer: {\n                type: 'uniform',\n              },\n            },\n          ],\n        });\n        bindGroupLayouts.push(nonEmptyBindGroupLayout);\n      }\n    }\n    const layout = t.device.createPipelineLayout({ bindGroupLayouts });\n\n    let declarations = '';\n    let statement = '_ = 1';\n    for (let i = 0; i < 4; ++i) {\n      if (emptyBindGroupLayoutIndexMissedInShader && i === emptyBindGroupLayoutIndex) {\n        continue;\n      }\n      declarations += `@group(${i}) @binding(0) var<uniform> input${i} : u32;\\n`;\n      statement += ` + input${i}`;\n    }\n\n    const shouldError = !emptyBindGroupLayoutIndexMissedInShader;\n\n    switch (pipelineType) {\n      case 'Render': {\n        const code = `\n        ${declarations}\n        @vertex\n        fn vert_main() -> @builtin(position) vec4f {\n            return vec4f(0.0, 0.0, 0.0, 1.0);\n        }\n\n        @fragment\n        fn frag_main() -> @location(0) vec4f {\n            ${statement};\n            return vec4f(0.0, 0.0, 0.0, 1.0);\n        }\n        `;\n        const shaderModule = t.device.createShaderModule({\n          code,\n        });\n\n        t.expectValidationError(() => {\n          t.device.createRenderPipeline({\n            layout,\n            vertex: {\n              module: shaderModule,\n            },\n            fragment: {\n              module: shaderModule,\n              targets: [\n                {\n                  format: 'rgba8unorm',\n                },\n              ],\n            },\n          });\n        }, shouldError);\n        break;\n      }\n\n      case 'Compute': {\n        const code = `\n        ${declarations}\n        @compute @workgroup_size(1) fn cs_main() {\n          ${statement};\n        }\n        `;\n        const shaderModule = t.device.createShaderModule({\n          code,\n        });\n        t.expectValidationError(() => {\n          t.device.createComputePipeline({\n            layout,\n            compute: {\n              module: shaderModule,\n            },\n          });\n        }, shouldError);\n        break;\n      }\n    }\n  });\n"],"mappings":"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"}